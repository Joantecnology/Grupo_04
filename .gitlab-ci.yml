# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

build_backend:       # This job runs in the build stage, which runs first.
  stage: build
  image: maven:3-openjdk-18
  script:
    - echo "Compiling/building the code Backend..."
    - "cd backend/Back"
    - "mvn clean install"
  artifacts:
        expire_in: 1 week
        paths:
            - backend/Back/PI/target/PI-0.0.1-SNAPSHOT.jar
  rules:
    - changes:
<<<<<<< HEAD
        - BackEnd/**/*
=======
        - backend/Back/**/*
>>>>>>> 5462e905019e9b8c10a0e831cde538f8634d4032

build_frontend:       # This job runs in the build stage, which runs first.
  stage: build
  image: node:16.14.2-alpine
  script:
    - echo "Compiling the code Frontend..."
    - cd frontend/Grupo 04 Vite/digital-booking/
    - ls 
    - npm --force install
    - CI=false npm run build
    - cd build 
    - ls
    - cd ..
    - pwd
    - echo "Compile Complete!!!"
  artifacts:
    expire_in: 1 week
    name: react_build
    paths:
         - ./frontend/Grupo 04 Vite/digital-booking/build
  rules:
    - changes:
<<<<<<< HEAD
        - FrontEnd/**/*
=======
        - /frontend/**/*
>>>>>>> 5462e905019e9b8c10a0e831cde538f8634d4032


deploy-backend:      # This job runs in the deploy stage.
  stage: deploy
  needs: [build_backend]
  image: alpine:3.11
  before_script:
        - apk update && apk add openssh-client bash
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - touch ~/.ssh/config
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        - ssh-keyscan -H "$DEPLOY_SERVER_IP" >> ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts
  script:
        - echo "Deploying started..."
        - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl stop myapp.service"
        - scp backend/PI/target/PI-0.0.1-SNAPSHOT.jar ubuntu@$DEPLOY_SERVER_IP:~/console-app/
        - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl start myapp.service"
        - echo "Finished deploying the app."

deploy_Frontend:
   stage: deploy
   needs: [build_frontend]
   image: python:latest 
   script:
      - cd /frontend/Grupo 04 Vite/digital-booking/build
      - ls
      - pwd   
      - cd /builds/ctd/proyecto-integrador-1022/0222-ft-c1/grupo-04
      - ls
      - pip install awscli   
      - aws configure set aws_secret_key_id $AWS_ACCESS_KEY_ID
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws s3 sync /frontend/Grupo 04 Vite/digital-booking/dist/ s3://grupo04digitalbooking
      